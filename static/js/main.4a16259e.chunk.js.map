{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["TodoItem","task","handleDelete","index","onClick","App","state","todos","userInput","console","log","newArr","splice","setState","handleChange","event","target","value","handleAdd","preventDefault","push","onSubmit","this","onChange","type","map","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAGMA,EAAW,SAAC,GAAoC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MACvC,OACE,gCACE,6BAAKF,IACL,wBAAQG,QAAS,kBAAMF,EAAaC,IAApC,wBAoDSE,E,4MA7CbC,MAAQ,CACNC,MAAO,GACPC,UAAW,I,EAGbN,aAAe,SAACC,GACdM,QAAQC,IAAI,WACZ,IAAIC,EAAM,YAAO,EAAKL,MAAMC,OAC5BI,EAAOC,OAAOT,EAAO,GACrB,EAAKU,SAAS,CAAEN,MAAQI,K,EAG1BG,aAAe,SAACC,GACd,EAAKF,SAAS,CAAEL,UAAWO,EAAMC,OAAOC,S,EAG1CC,UAAY,SAACH,GACXA,EAAMI,iBACN,IAAIR,EAAM,YAAO,EAAKL,MAAMC,OAC5BI,EAAOS,KAAK,EAAKd,MAAME,WACvB,EAAKK,SAAU,CAAEN,MAAOI,IACxB,EAAKE,SAAS,CAAEL,UAAW,KAC3BC,QAAQC,IAAI,EAAKJ,MAAMC,Q,4CAGzB,WAAU,IAAD,OACP,OACE,gCACE,gCACE,sDACA,uBAAMc,SAAUC,KAAKJ,UAArB,UACE,uBAAOK,SAAUD,KAAKR,aAAcG,MAAOK,KAAKhB,MAAME,YACtD,wBAAQgB,KAAK,SAAb,uBAGJ,8BACGF,KAAKhB,MAAMC,MAAMkB,KAAI,SAACxB,EAAME,GAC3B,OAAO,cAAC,EAAD,CAAUF,KAAMA,EAAkBE,MAAOA,EAAOD,aAAc,EAAKA,cAAxCC,e,GAvC5BuB,IAAMC,WCATC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4a16259e.chunk.js","sourcesContent":["\nimport React from 'react';\n\nconst TodoItem = ( { task, handleDelete, index }) => {\n  return (\n    <div>\n      <h2>{task}</h2>\n      <button onClick={() => handleDelete(index)}>delete</button>\n    </div>\n  )\n}\n\nclass App extends React.Component {\n\n  state = {\n    todos: [],\n    userInput: ''\n  }\n\n  handleDelete = (index) => {\n    console.log('clicked')\n    let newArr = [...this.state.todos];\n    newArr.splice(index, 1);\n    this.setState({ todos : newArr })\n  }\n\n  handleChange = (event) => {\n    this.setState({ userInput: event.target.value })\n  }\n\n  handleAdd = (event) => {\n    event.preventDefault();\n    let newArr = [...this.state.todos];\n    newArr.push(this.state.userInput);\n    this.setState( { todos: newArr})\n    this.setState({ userInput: ''})\n    console.log(this.state.todos)\n  }\n    \n  render() {\n    return (\n      <div>\n        <div>\n          <h1>Michael's todo list!</h1>\n          <form onSubmit={this.handleAdd}>\n            <input onChange={this.handleChange} value={this.state.userInput}/>\n            <button type=\"submit\">add</button>\n          </form>\n        </div>\n        <div>\n          {this.state.todos.map((task, index) => {\n            return <TodoItem task={task} key={index} index={index} handleDelete={this.handleDelete}/>\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}